{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/MessageForm/MessageForm.module.css","components/Dialogs/MessageForm/MessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.module.css","components/Profile/ProfileInfo/ProfileUpdateForm/ProfileUpdateForm.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostForm/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileUpdateForm/ProfileUpdateForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["DialogItem","props","pathToDialog","id","className","classes","dialog","src","alt","to","activeClassName","active","name","module","exports","Message","message","messageText","maxLength70","createMaxLengthValivator","reduxForm","form","onSubmit","handleSubmit","sendMessages","Field","type","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogsData","map","index","messagesElements","messagesData","msg","dialogBlock","dialogs","dialogsItems","messageItems","formData","onSendMessage","Post","item","likeCounts","maxLenght100","MyPosts","postsElements","posts","post","likesCount","postBlock","onAddPost","newPost","React","memo","MyPostsContainer","connect","state","profilePage","postsData","dispatch","addPostActionCreator","ProfileStatus","editMode","status","enableEditMode","setState","disableEditMode","updateStatus","onChangeStatus","event","currentTarget","value","prevProps","prevState","this","onDoubleClick","title","onChange","autoFocus","onBlur","statusUpdateError","Component","profile","error","contactsFields","Object","entries","contacts","contact","Input","formSubmitError","ProfileBlock","onToggleEditMode","setPhoto","isPageOwner","myContacts","myContactsElement","fieldInfo","contactsItem","href","target","rel","Fragment","descriptionBlock","profilePhoto","photos","large","noProfilePhoto","fullname","nameAndStatus","fullName","descriptionItem","aboutMe","lookingForAJob","lookingForAJobDescription","choosePhoto","htmlFor","files","onClick","ProfileInfo","useState","setEditMode","initialValues","updateProfile","then","catch","updateUserInfo","Profile","profileBlock","Loader","ProfileContainer","userId","match","params","authorizedUserId","getProfile","getStatus","refreshPage","snapshot","compose","statusField","errorMessage","auth","isAuth","photoFile","setUserPhoto","withRouter"],"mappings":"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","file":"static/js/3.1297eb76.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport classes from './DialogItem.module.css'\n\nconst DialogItem = (props) => {\n  let pathToDialog = `/dialogs/${props.id}`\n  return (\n    <div className={classes.dialog}>\n      <div>\n        <img src=\"https://i.imgur.com/Ss75Vfa.jpg\" alt=\"dialogItem\"/>\n      </div>\n      <div>\n        <NavLink to={pathToDialog} activeClassName={classes.active}>{props.name}</NavLink>\n      </div>\n    </div>\n  )\n}\n\nexport default DialogItem","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogBlock\":\"Dialogs_dialogBlock__3EkfI\",\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"messageItems\":\"Dialogs_messageItems__1r8sx\"};","import React from 'react'\nimport classes from './Message.module.css'\n\n\nconst Message = (props) => { \n  return (\n    <div className={classes.message}>\n      <div>\n        <img src=\"https://i.imgur.com/sFRuG9D.jpg\" alt=\"messageImage\"/>\n      </div>\n      <div className={classes.messageText}>\n        {props.message}\n      </div>\n    </div>\n  )\n}\n\nexport default Message","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\",\"messageText\":\"Message_messageText__1G9P6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendMessages\":\"MessageForm_sendMessages__1ONjS\"};","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { Textarea } from '../../common/ValidatedFields/validatedFields'\nimport { createMaxLengthValivator, required } from '../../utils/validators'\nimport classes from './MessageForm.module.css'\n\nconst maxLength70 = createMaxLengthValivator(70)\n\nconst MessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} className={classes.sendMessages}>\n      <div>\n        <Field \n        type='text' \n        component={Textarea} \n        name='messageText'\n        validate={[required, maxLength70]} \n        placeholder='Enter your message'/>\n      </div>\n      <div>\n        <button>Send message</button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'message'\n})(MessageForm)","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Field, reduxForm } from 'redux-form'\nimport DialogItem from './DialogItem/DialogItem'\nimport classes from './Dialogs.module.css'\nimport Message from './Message/Message'\nimport MessageForm from './MessageForm/MessageForm'\n\n\n\nconst Dialogs = (props) => {\n\n  const dialogsElements = props.dialogsData.map((dialog, index) => {\n    return (\n      <DialogItem name={dialog.name} id={dialog.id} key={index}/>\n    )\n  })\n\n  const messagesElements = props.messagesData.map((msg, index) => {\n    return(\n      <Message message={msg.message} key={index}/>\n    )\n  })\n\n  const onSendMessage = (formData) => {\n    props.onSendMessage(formData.messageText)\n  }\n\n  return (\n    <div className={classes.dialogBlock}>\n      <div className={classes.dialogs}>\n        <div className={classes.dialogsItems}>\n          { dialogsElements }\n        </div>\n        <div className={classes.messageItems}> \n          { messagesElements }\n        </div>\n        <MessageForm onSubmit={(formData) => onSendMessage(formData)}/>\n      </div>\n    </div>\n  )\n}\n\n\nexport default Dialogs","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3b6E0\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"message\":\"Post_message__3raFK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBlock\":\"Profile_profileBlock__fp8bz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"choosePhoto\":\"ProfileInfo_choosePhoto__2TMi3\",\"profilePhoto\":\"ProfileInfo_profilePhoto__9KLOb\",\"nameAndStatus\":\"ProfileInfo_nameAndStatus__29SDJ\",\"name\":\"ProfileInfo_name__1VvQB\",\"descriptionItem\":\"ProfileInfo_descriptionItem__1EqOf\",\"myContacts\":\"ProfileInfo_myContacts__2e0c4\",\"contactsItem\":\"ProfileInfo_contactsItem__VYNp-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusUpdateError\":\"ProfileStatus_statusUpdateError__Wt2lM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSubmitError\":\"ProfileUpdateForm_formSubmitError__2KJ9B\"};","import React from \"react\";\nimport classes from './Post.module.css'\n\nconst Post = (props) => {\n  return (\n    <div className={classes.item}>\n      <div>\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcToVm-BfiWN-1qbMxJSI3ydyyHFa7_N7vBPDw&usqp=CAU\" alt=\"\"/>\n      </div>\n      <div className={classes.message}>\n        {props.message} <br/>\n        <span>{props.likeCounts} likes</span>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { Textarea } from '../../../common/ValidatedFields/validatedFields'\nimport {createMaxLengthValivator, required } from '../../../utils/validators'\n\nconst maxLenght100 = createMaxLengthValivator(100)\n\nconst PostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field \n          component={Textarea}\n          type='text' \n          name='newPost' \n          validate={[required, maxLenght100]}\n          placeholder='Add new post'/>\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'post'\n})(PostForm)\n","import React from \"react\";\nimport classes from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport PostForm from \"./PostForm/PostForm\";\n\nconst MyPosts = (props) => {\n\n  const postsElements = props.posts.map((post, index) => {\n    return (\n      <Post message={post.message} likeCounts={post.likesCount} key={index}/> \n    )\n  })\n\n  const onAddPost = (formData) => {\n    props.onAddPost(formData.newPost)\n  }\n\n  return (\n    <div className={classes.postBlock}>\n      <h3>My posts</h3> \n      <PostForm onSubmit={(formData) => onAddPost(formData)}/>\n      <div className={classes.posts}>\n        {postsElements}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(MyPosts);\n","import React from \"react\";\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../redux/profile-reducer\";\nimport StoreContext from \"../../../StoreContext\";\nimport Dialogs from \"../../Dialogs/Dialogs\";\nimport MyPosts from \"./MyPosts\";\nimport classes from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport {connect} from 'react-redux'\n\n// const MyPostsContainer = (props) => {\n\n//   return (\n\n//     <StoreContext.Consumer>\n//       {\n//         (store) => {\n//           let state = store.getState().profilePage\n\n//           const onAddPost = () => {\n//             store.dispatch(addPostActionCreator())\n//           }\n        \n//           let onPostChange = (text) => {\n//             store.dispatch(updateNewPostTextActionCreator(text))\n//           }\n        \n//           return (\n//             <MyPosts \n//               onAddPost={onAddPost} \n//               onPostChange={(text) => onPostChange(text)}\n//               posts={state.postsData}\n//               newPostText={state.newPostText}\n//             />\n//           )\n//         }\n//       }\n//     </StoreContext.Consumer>\n//   );\n// };\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.profilePage.postsData,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onAddPost: (post) => {\n      dispatch(addPostActionCreator(post))\n    },\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;\n","import React, { useEffect, useState } from \"react\";\nimport classes from './ProfileStatus.module.css'\n\n\nclass ProfileStatus extends React.Component {\n\n  state = {\n    editMode: false,\n    status: this.props.status\n  }\n\n  enableEditMode = () => {\n    this.setState({\n      editMode: true\n    })\n  }\n  disableEditMode = () => {\n    this.setState({\n      editMode: false\n    })\n    this.props.updateStatus(this.state.status)\n  }\n\n  onChangeStatus = (event) => {\n    this.setState({\n      status: event.currentTarget.value\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({\n        status: this.props.status\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        Статус:\n        {!this.state.editMode &&\n          <div>\n            <span onDoubleClick={this.enableEditMode} title=\"Double click to edit\">{this.props.status || '------'}</span>\n          </div>\n        }\n        {this.state.editMode &&\n          <div>\n            <input\n              onChange={this.onChangeStatus}\n              autoFocus={true}\n              onBlur={this.disableEditMode}\n              value={this.state.status}/>\n          </div>\n        }\n        {this.props.statusUpdateError &&\n          <span className={classes.statusUpdateError}>\n            <i className=\"fa fa-exclamation-circle\"></i>\n            &nbsp;\n            {this.props.statusUpdateError}\n          </span>\n        }\n      </div>\n    )\n  }\n}\n\nexport default ProfileStatus;\n\n\n// const ProfileStatus = (props) => {\n//   const [editMode, setEditMode] = useState(false);\n//   const [status, setStatus] = useState(props.status)\n\n//   useEffect(() => {\n//     setStatus(props.status)\n//   }, [props.status])\n\n//   const enableEditMode = () => {\n//     setEditMode(true)\n//   }  \n\n//   const disableEditMode = () => {\n//     setEditMode(false)\n//     props.updateStatus(status)\n//   }\n\n//   const onChangeStatus = (event) => {\n//     setStatus(event.currentTarget.value)\n//   }\n//   return (\n//     <div>\n//       {!editMode && (\n//         <div>\n//           <span\n//             onDoubleClick={enableEditMode}\n//             title=\"Double click to edit\"\n//           >\n//             {status || \"------\"}\n//           </span>\n//         </div>\n//       )}\n//       {editMode && (\n//         <div>\n//           <input\n//             onChange={onChangeStatus}\n//             autoFocus={true}\n//             onBlur={disableEditMode}\n//             value={status}\n//           />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n","import React from 'react'\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input, Textarea} from \"../../../common/ValidatedFields/validatedFields\";\nimport {required} from \"../../../utils/validators\";\nimport classes from './ProfileUpdateForm.module.css'\n\nconst ProfileUpdateForm = ({profile, handleSubmit, error}) => {\n\n  const contactsFields = Object.entries(profile.contacts).map((contact, index) => {\n    return (\n      <div key={ index }>\n        <Field\n          type='text'\n          component={ Input }\n          name={ 'contacts.' + contact[0] }\n          placeholder={ contact[0] }\n        />\n      </div>\n    )\n  })\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <div>\n        <button>Save</button>\n      </div>\n      <div>\n        <Field\n          type='text'\n          component={ Input }\n          name='fullName'\n          placeholder='Введите свое имя'\n        />\n      </div>\n      <div>\n        <Field\n          type='checkbox'\n          name='lookingForAJob'\n          component='input'\n        /> Ищите ли вы работу?\n      </div>\n      <div>\n        <Field\n          type='text'\n          component={ Textarea }\n          name='lookingForAJobDescription'\n          placeholder='Введите свои навыки'\n        />\n      </div>\n      <div>\n        <Field\n          type='text'\n          component={ Textarea }\n          name='aboutMe'\n          placeholder='Введите информацию о себе'\n        />\n      </div>\n      <div>\n        Contacts:\n        { contactsFields }\n      </div>\n      { error &&\n      <div className={ classes.formSubmitError }>\n        { error }\n      </div>\n      }\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'editProfileForm'\n})(ProfileUpdateForm)","import React, {useState} from \"react\";\nimport classes from \"./ProfileInfo.module.css\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport noProfilePhoto from '../../../assets/images/user_no_photo.png'\n//import {NavLink} from \"react-router-dom\";\nimport ProfileUpdateForm from \"./ProfileUpdateForm/ProfileUpdateForm\";\n\nconst ProfileInfo = (props) => {\n\n  const [editMode, setEditMode] = useState(false)\n\n  const onToggleEditMode = () => {\n    setEditMode(true)\n  }\n\n  const updateUserInfo = (formData) => {\n    let promise = props.updateProfile(formData)\n    promise.then(() => {\n      setEditMode(false)\n    })\n      .catch((error) => {\n      })\n  }\n\n  return (\n    <React.Fragment>\n      <div>\n        <img\n          src=\"https://d3g7htsbjjywiv.cloudfront.net/assets/graphicstock/images/media-type/vector/Hero.jpg\"\n          alt=\"\"\n        />\n      </div>\n\n      { !editMode\n        ? <ProfileBlock\n          profile={ props.profile }\n          statusUpdateError={ props.statusUpdateError }\n          onToggleEditMode={ onToggleEditMode }\n          setPhoto={ props.setPhoto }\n          updateStatus={ props.updateStatus }\n          status={ props.status }\n          isPageOwner={ props.isPageOwner }\n        />\n        : <ProfileUpdateForm\n          initialValues={ props.profile }\n          onSubmit={ (formData) => updateUserInfo(formData) }\n          profile={ props.profile }\n        />\n      }\n    </React.Fragment>\n  );\n};\n\nconst ProfileBlock = ({profile,\n                        onToggleEditMode,\n                        setPhoto,\n                        updateStatus,\n                        status,\n                        isPageOwner,\n                        statusUpdateError}) => {\n\n  const onChangePhoto = (event) => {\n    if (event.target.files !== 0) {\n      setPhoto(event.target.files[0])\n    }\n  }\n\n  let myContacts = profile.contacts\n\n  const myContactsElement = Object.entries(myContacts).map((contact, index) => {\n    let fieldInfo = contact[1] ? contact[1] : 'No information'\n    return (\n      <div key={ index } className={ classes.contactsItem }>\n        <strong> { contact[0] }: </strong> <a href={ contact[1] } target={ '_blank' } rel=\"noreferrer\">{ fieldInfo }</a>\n      </div>\n    )\n  })\n  return (\n    <React.Fragment>\n      <div className={ classes.descriptionBlock }>\n\n        <div className={ classes.profilePhoto }>\n          <img src={ profile.photos.large || noProfilePhoto } alt={ profile.fullname }/>\n        </div>\n        <div className={ classes.nameAndStatus }>\n          <div className={ classes.name }>\n            Имя: { profile.fullName }\n          </div>\n          <div className={ classes.descriptionItem }>\n            Немного обо мне: { profile.aboutMe }\n          </div>\n          <div className={ classes.descriptionItem }>\n            <ProfileStatus\n              status={ status }\n              updateStatus={ updateStatus }\n              statusUpdateError={statusUpdateError}/>\n          </div>\n          <div className={ classes.descriptionItem }>\n            Рабочий статус: { profile.lookingForAJob ? 'Ищу работу' : 'Уже работаю' }\n          </div>\n          <div className={ classes.descriptionItem }>\n            Проф. описание: { profile.lookingForAJobDescription }\n          </div>\n          {\n            isPageOwner &&\n            <React.Fragment>\n              <div className={ classes.choosePhoto }>\n                <label htmlFor=\"uploadAvatar\" id=\"label\">Выберите файл для смены аватара: &nbsp;</label>\n                <input\n                  id={ 'uploadAvatar' }\n                  type={ 'file' }\n                  onChange={ onChangePhoto }\n                />\n              </div>\n              <div>\n                <button onClick={ onToggleEditMode }>\n                  Изменить информацию о профиле\n                </button>\n              </div>\n            </React.Fragment>\n          }\n\n        </div>\n      </div>\n      {/* block */ }\n      <div className={ classes.myContacts }>\n        <span>\n          Мои контакты:\n        </span>\n        { myContactsElement }\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport Loader from \"../common/Loader/Loader\";\n// import MyPosts from \"./MyPosts/MyPosts\";\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\nimport classes from \"./Profile.module.css\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n  if (!props.profile) {\n    return <Loader />\n  }\n  return (\n    <div className={classes.profileBlock}>\n      <ProfileInfo\n        isPageOwner={props.isPageOwner}\n        profile={props.profile}\n        updateStatus={props.updateStatus}\n        statusUpdateError={props.statusUpdateError}\n        status={props.status}\n        updateProfile={props.updateProfile}\n        setPhoto={props.setPhoto}/>\n      <MyPostsContainer />\n\n      {/* <MyPosts \n        posts={props.state.postsData} \n        newPostText={props.state.newPostText}\n        dispatch={props.dispatch}\n        /> */}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react'\nimport {getProfile, getStatus, setUserPhoto, updateProfile, updateStatus} from '../../redux/profile-reducer'\nimport Profile from './Profile'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\n//import withAuthRedirect from '../hoc/withAuthRedirect'\nimport { compose } from 'redux'\n\nclass ProfileContainer extends React.Component {\n\n  refreshPage() {\n    let userId = this.props.match.params.userId\n    if (!userId) {\n      userId = this.props.authorizedUserId\n    }\n    this.props.getProfile(userId)\n    this.props.getStatus(userId)\n  }\n\n  componentDidMount() {\n    this.refreshPage()\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.match.params.userId !== this.props.match.params.userId) {\n      this.refreshPage()\n    }\n  }\n\n  render() {\n    return (\n      <Profile { ...this.props }\n               isPageOwner={ !this.props.match.params.userId }\n               profile={ this.props.profile }\n               updateStatus={ this.props.updateStatus }/>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.statusField.status,\n    statusUpdateError: state.profilePage.statusField.errorMessage,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth \n  }\n} \n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getProfile: (profile) => {\n      dispatch(getProfile(profile))\n    },\n    getStatus: (userId) => {\n      dispatch(getStatus(userId))\n    },\n    updateStatus: (status) => {\n      dispatch(updateStatus(status))\n    },\n    setPhoto: (photoFile) => {\n      dispatch(setUserPhoto(photoFile))\n    },\n    updateProfile: (formData) => {\n      return dispatch(updateProfile(formData))\n    }\n  }\n}\n\nexport default compose(\n              connect(mapStateToProps, mapDispatchToProps),\n              withRouter,\n              // withAuthRedirect,\n              )(ProfileContainer)"],"sourceRoot":""}