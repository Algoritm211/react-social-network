{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","compose","dialogsData","dialogsPage","messagesData","dispatch","onSendMessage","message","sendMessage","Dialogs"],"mappings":"sNAIA,SAASA,EAAgBC,GACvB,MAAO,CACLC,OAAQD,EAAME,KAAKD,QAkBRE,IAdU,SAACC,GAAe,IACjCC,EADgC,uKAGlC,OAAKC,KAAKC,MAAMN,OAId,cAACG,EAAD,eAAeE,KAAKC,QAHb,cAAC,IAAD,CAAUC,GAAG,eAJY,GACNC,IAAML,WAUtC,OAAOM,YAAQX,EAARW,CAAyBL,K,iCCrBlC,yFA6DeM,sBACCD,aAnBhB,SAAyBV,GACvB,MAAO,CACLY,YAAaZ,EAAMa,YAAYD,YAC/BE,aAAcd,EAAMa,YAAYC,iBAKpC,SAA4BC,GAC1B,MAAO,CACLC,cAAe,SAACC,GACdF,EAASG,YAAYD,SASXd,IAFDQ,CAGCQ","file":"static/js/4.8801cd83.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction mapStateToProps(state) {\n  return {\n    isAuth: state.auth.isAuth\n  }\n}\n\nconst withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render () {\n      if (!this.props.isAuth) {\n        return <Redirect to='/login' />\n      }\n      return (\n        <Component {...this.props} />\n      )\n    }\n  }\n  return connect(mapStateToProps)(RedirectComponent)\n};\n\nexport default withAuthRedirect\n","import React from 'react'\nimport { sendMessage, sendMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogs-reducer'\nimport StoreContext from '../../StoreContext'\nimport DialogItem from './DialogItem/DialogItem'\nimport Dialogs from './Dialogs'\nimport classes from './Dialogs.module.css'\nimport Message from './Message/Message'\nimport {connect} from 'react-redux'\nimport withAuthRedirect from '../hoc/withAuthRedirect'\nimport { compose } from 'redux'\n\n\n\n// const DialogsContainer = (props) => {\n\n//   return (\n//     <StoreContext.Consumer>\n//       {\n//         (store) => {\n//           let state = store.getState().dialogsPage\n\n//           const onSendMessage = () => {\n//             store.dispatch(sendMessageActionCreator())\n//           }\n        \n//           const onMessageChange = (text) => {\n//             store.dispatch(updateNewMessageTextActionCreator(text))\n//           }\n\n//           return (\n//             <Dialogs \n//               onSendMessage={onSendMessage}\n//               onMessageChange={(text) => onMessageChange(text)} \n//               state={state}\n//             />\n//           )\n//         }\n//       }\n      \n//     </StoreContext.Consumer>\n//   )\n// }\n\nfunction mapStateToProps(state) {\n  return {\n    dialogsData: state.dialogsPage.dialogsData,\n    messagesData: state.dialogsPage.messagesData,\n    // newMessageText: state.message.messageText\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSendMessage: (message) => {\n      dispatch(sendMessage(message))\n    },\n  }\n}\n\n\n\nexport default compose(\n                connect(mapStateToProps, mapDispatchToProps),\n                withAuthRedirect\n              )(Dialogs)"],"sourceRoot":""}