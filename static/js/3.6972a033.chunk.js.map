{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/PostForm/PostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","classes","item","src","alt","message","likeCounts","maxLenght100","createMaxLengthValivator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","type","name","validate","required","placeholder","MyPosts","postsElements","posts","map","post","index","likesCount","postBlock","formData","onAddPost","newPost","memo","MyPostsContainer","profilePage","postsData","dispatch","addPostActionCreator","ProfileStatus","editMode","status","enableEditMode","setState","disableEditMode","updateStatus","onChangeStatus","event","currentTarget","value","prevProps","prevState","onDoubleClick","title","onChange","autoFocus","onBlur","ProfileInfo","myContacts","profile","contacts","myContactsElement","Object","entries","contact","fieldInfo","contactsItem","href","Fragment","descriptionBlock","profilePhoto","photos","large","fullname","nameAndStatus","fullName","descriptionItem","lookingForAJob","lookingForAJobDescription","Profile","profileBlock","Loader","ProfileContainer","userId","match","params","authorizedUserId","getProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.6972a033.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction mapStateToProps(state) {\n  return {\n    isAuth: state.auth.isAuth\n  }\n}\n\nconst withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render () {\n      if (!this.props.isAuth) {\n        return <Redirect to='/login' />\n      }\n      return (\n        <Component {...this.props} />\n      )\n    }\n  }\n  return connect(mapStateToProps)(RedirectComponent)\n};\n\nexport default withAuthRedirect\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3b6E0\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"message\":\"Post_message__3raFK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBlock\":\"Profile_profileBlock__fp8bz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"profilePhoto\":\"ProfileInfo_profilePhoto__9KLOb\",\"nameAndStatus\":\"ProfileInfo_nameAndStatus__29SDJ\",\"name\":\"ProfileInfo_name__1VvQB\",\"descriptionItem\":\"ProfileInfo_descriptionItem__1EqOf\",\"myContacts\":\"ProfileInfo_myContacts__2e0c4\",\"contactsItem\":\"ProfileInfo_contactsItem__VYNp-\"};","import React from \"react\";\nimport classes from './Post.module.css'\n\nconst Post = (props) => {\n  return (\n    <div className={classes.item}>\n      <div>\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcToVm-BfiWN-1qbMxJSI3ydyyHFa7_N7vBPDw&usqp=CAU\" alt=\"\"/>\n      </div>\n      <div className={classes.message}>\n        {props.message} <br/>\n        <span>{props.likeCounts} likes</span>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { Textarea } from '../../../common/ValidatedFields/validatedFields'\nimport {createMaxLengthValivator, required } from '../../../utils/validators'\n\nconst maxLenght100 = createMaxLengthValivator(100)\n\nconst PostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field \n          component={Textarea}\n          type='text' \n          name='newPost' \n          validate={[required, maxLenght100]}\n          placeholder='Add new post'/>\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'post'\n})(PostForm)\n","import React from \"react\";\nimport classes from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport PostForm from \"./PostForm/PostForm\";\n\nconst MyPosts = (props) => {\n\n  const postsElements = props.posts.map((post, index) => {\n    return (\n      <Post message={post.message} likeCounts={post.likesCount} key={index}/> \n    )\n  })\n\n  const onAddPost = (formData) => {\n    props.onAddPost(formData.newPost)\n  }\n\n  return (\n    <div className={classes.postBlock}>\n      <h3>My posts</h3> \n      <PostForm onSubmit={(formData) => onAddPost(formData)}/>\n      <div className={classes.posts}>\n        {postsElements}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(MyPosts);\n","import React from \"react\";\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../redux/profile-reducer\";\nimport StoreContext from \"../../../StoreContext\";\nimport Dialogs from \"../../Dialogs/Dialogs\";\nimport MyPosts from \"./MyPosts\";\nimport classes from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport {connect} from 'react-redux'\n\n// const MyPostsContainer = (props) => {\n\n//   return (\n\n//     <StoreContext.Consumer>\n//       {\n//         (store) => {\n//           let state = store.getState().profilePage\n\n//           const onAddPost = () => {\n//             store.dispatch(addPostActionCreator())\n//           }\n        \n//           let onPostChange = (text) => {\n//             store.dispatch(updateNewPostTextActionCreator(text))\n//           }\n        \n//           return (\n//             <MyPosts \n//               onAddPost={onAddPost} \n//               onPostChange={(text) => onPostChange(text)}\n//               posts={state.postsData}\n//               newPostText={state.newPostText}\n//             />\n//           )\n//         }\n//       }\n//     </StoreContext.Consumer>\n//   );\n// };\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.profilePage.postsData,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onAddPost: (post) => {\n      dispatch(addPostActionCreator(post))\n    },\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;\n","import React, { useEffect, useState } from \"react\";\n\n// const ProfileStatus = (props) => {\n//   const [editMode, setEditMode] = useState(false);\n//   const [status, setStatus] = useState(props.status)\n\n//   useEffect(() => {\n//     setStatus(props.status)\n//   }, [props.status])\n\n//   const enableEditMode = () => {\n//     setEditMode(true)\n//   }  \n\n//   const disableEditMode = () => {\n//     setEditMode(false)\n//     props.updateStatus(status)\n//   }\n\n//   const onChangeStatus = (event) => {\n//     setStatus(event.currentTarget.value)\n//   }\n//   return (\n//     <div>\n//       {!editMode && (\n//         <div>\n//           <span\n//             onDoubleClick={enableEditMode}\n//             title=\"Double click to edit\"\n//           >\n//             {status || \"------\"}\n//           </span>\n//         </div>\n//       )}\n//       {editMode && (\n//         <div>\n//           <input\n//             onChange={onChangeStatus}\n//             autoFocus={true}\n//             onBlur={disableEditMode}\n//             value={status}\n//           />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\nclass ProfileStatus extends React.Component {\n\n  state = {\n    editMode: false,\n    status: this.props.status\n  }\n\n  enableEditMode = () => {\n    this.setState({\n      editMode: true\n    })\n  }\n  disableEditMode = () => {\n    this.setState({\n      editMode: false\n    })\n    this.props.updateStatus(this.state.status)\n  }\n\n  onChangeStatus = (event) => {\n    this.setState({\n      status: event.currentTarget.value\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({\n        status: this.props.status\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.state.editMode &&\n          <div>\n            <span onDoubleClick={this.enableEditMode} title=\"Double click to edit\">{this.props.status || '------'}</span>\n          </div>\n        }\n        {this.state.editMode &&\n          <div>\n            <input\n              onChange={this.onChangeStatus}\n              autoFocus={true}\n              onBlur={this.disableEditMode}\n              value={this.state.status}/>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default ProfileStatus;\n","import React from \"react\";\nimport classes from \"./ProfileInfo.module.css\";\nimport ProfileStatus from \"./ProfileStatus\";\n\nconst ProfileInfo = (props) => {\n\n  let myContacts = props.profile.contacts\n\n  const myContactsElement = Object.entries(myContacts).map((contact, index) => {\n    let fieldInfo = contact[1] ? contact[1] : 'No information'\n    return (\n      <div key={index} className={classes.contactsItem}>\n          <strong> {contact[0]}:  </strong> <a href={contact[1]}>{fieldInfo}</a>\n      </div>\n    )\n  })\n\n  return (\n    <React.Fragment>\n      <div>\n        <img\n          src=\"https://d3g7htsbjjywiv.cloudfront.net/assets/graphicstock/images/media-type/vector/Hero.jpg\"\n          alt=\"\"\n        />\n      </div>\n      <div className={classes.descriptionBlock}>\n        <div className={classes.profilePhoto}>\n          <img src={props.profile.photos.large} alt={props.profile.fullname}/>\n        </div>\n        <div className={classes.nameAndStatus}>\n          <div className={classes.name}>\n            Имя: {props.profile.fullName}\n          </div>\n          <div className={classes.descriptionItem}>\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n          </div>\n          <div className={classes.descriptionItem}>\n            Рабочий статус: {props.profile.lookingForAJob ? 'Ищу работу' : 'Уже работаю'}\n          </div>\n          <div className={classes.descriptionItem}>\n            Проф. описание: {props.profile.lookingForAJobDescription}\n          </div>\n        </div>\n      </div>\n      {/* block */}\n      <div className={classes.myContacts}>\n        <span>\n          Мои контакты:\n        </span>\n        {myContactsElement}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Loader from \"../common/Loader/Loader\";\n// import MyPosts from \"./MyPosts/MyPosts\";\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\nimport classes from \"./Profile.module.css\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n  if (!props.profile) {\n    return <Loader />\n  }\n  return (\n    <div className={classes.profileBlock}>\n      <ProfileInfo profile={props.profile} updateStatus={props.updateStatus} status={props.status}/>\n      <MyPostsContainer />\n\n      {/* <MyPosts \n        posts={props.state.postsData} \n        newPostText={props.state.newPostText}\n        dispatch={props.dispatch}\n        /> */}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react'\nimport { getProfile, getStatus, updateStatus } from '../../redux/profile-reducer'\nimport Profile from './Profile'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport withAuthRedirect from '../hoc/withAuthRedirect'\nimport { compose } from 'redux'\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount() {\n    let userId = this.props.match.params.userId \n    if (!userId) {\n      userId = this.props.authorizedUserId\n    }\n    this.props.getProfile(userId)\n    this.props.getStatus(userId)\n  }\n\n  render() {\n    return (\n      <Profile {...this.props} profile={this.props.profile} updateStatus={this.props.updateStatus}/>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth \n  }\n} \n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getProfile: (profile) => {\n      dispatch(getProfile(profile))\n    },\n    getStatus: (userId) => {\n      dispatch(getStatus(userId))\n    },\n    updateStatus: (status) => {\n      dispatch(updateStatus(status))\n    }\n  }\n}\n\nexport default compose(\n              connect(mapStateToProps, mapDispatchToProps),\n              withRouter,\n              // withAuthRedirect,\n              )(ProfileContainer)"],"sourceRoot":""}