{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/MessageForm/MessageForm.module.css","components/Dialogs/MessageForm/MessageForm.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["DialogItem","props","pathToDialog","id","className","classes","dialog","src","alt","to","activeClassName","active","name","module","exports","Message","message","messageText","maxLength70","createMaxLengthValivator","reduxForm","form","onSubmit","handleSubmit","sendMessages","Field","type","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogsData","map","index","messagesElements","messagesData","msg","dialogBlock","dialogs","dialogsItems","messageItems","formData","onSendMessage","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dialogsPage","dispatch","sendMessage"],"mappings":"gLAkBeA,IAdI,SAACC,GAClB,IAAIC,EAAY,mBAAeD,EAAME,IACrC,OACE,sBAAKC,UAAWC,IAAQC,OAAxB,UACE,8BACE,qBAAKC,IAAI,kCAAkCC,IAAI,iBAEjD,8BACE,cAAC,IAAD,CAASC,GAAIP,EAAcQ,gBAAiBL,IAAQM,OAApD,SAA6DV,EAAMW,c,oBCX3EC,EAAOC,QAAU,CAAC,YAAc,6BAA6B,QAAU,yBAAyB,aAAe,8BAA8B,aAAe,gC,qECgB7IC,IAbC,SAACd,GACf,OACE,sBAAKG,UAAWC,IAAQW,QAAxB,UACE,8BACE,qBAAKT,IAAI,kCAAkCC,IAAI,mBAEjD,qBAAKJ,UAAWC,IAAQY,YAAxB,SACGhB,EAAMe,e,gECVfH,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,+B,oBCAnED,EAAOC,QAAU,CAAC,aAAe,oC,2ICK3BI,EAAcC,YAAyB,IAoB9BC,cAAU,CACvBC,KAAM,WADOD,EAlBK,SAACnB,GACnB,OACE,uBAAMqB,SAAUrB,EAAMsB,aAAcnB,UAAWC,IAAQmB,aAAvD,UACE,8BACE,cAACC,EAAA,EAAD,CACAC,KAAK,OACLC,UAAWC,IACXhB,KAAK,cACLiB,SAAU,CAACC,IAAUZ,GACrBa,YAAY,yBAEd,8BACE,0DCwBOC,IAlCC,SAAC/B,GAEf,IAAMgC,EAAkBhC,EAAMiC,YAAYC,KAAI,SAAC7B,EAAQ8B,GACrD,OACE,cAACpC,EAAA,EAAD,CAAYY,KAAMN,EAAOM,KAAMT,GAAIG,EAAOH,IAASiC,MAIjDC,EAAmBpC,EAAMqC,aAAaH,KAAI,SAACI,EAAKH,GACpD,OACE,cAACrB,EAAA,EAAD,CAASC,QAASuB,EAAIvB,SAAcoB,MAQxC,OACE,qBAAKhC,UAAWC,IAAQmC,YAAxB,SACE,sBAAKpC,UAAWC,IAAQoC,QAAxB,UACE,qBAAKrC,UAAWC,IAAQqC,aAAxB,SACIT,IAEJ,qBAAK7B,UAAWC,IAAQsC,aAAxB,SACIN,IAEJ,cAAC,EAAD,CAAaf,SAAU,SAACsB,GAAD,OAbP,SAACA,GACrB3C,EAAM4C,cAAcD,EAAS3B,aAYY4B,CAAcD,a,4KCjC3D,SAASE,EAAgBC,GACvB,MAAO,CACLC,OAAQD,EAAME,KAAKD,QAIvB,IAceE,EAdU,SAACC,GAAe,IACjCC,EADgC,uKAGlC,OAAKC,KAAKpD,MAAM+C,OAId,cAACG,EAAD,eAAeE,KAAKpD,QAHb,cAAC,IAAD,CAAUQ,GAAG,eAJY,GACN6C,IAAMH,WAUtC,OAAOI,YAAQT,EAARS,CAAyBH,I,OCwCnBI,sBACCD,aAnBhB,SAAyBR,GACvB,MAAO,CACLb,YAAaa,EAAMU,YAAYvB,YAC/BI,aAAcS,EAAMU,YAAYnB,iBAKpC,SAA4BoB,GAC1B,MAAO,CACLb,cAAe,SAAC7B,GACd0C,EAASC,YAAY3C,SASXkC,EAFDM,CAGCxB","file":"static/js/4.2bdb062b.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport classes from './DialogItem.module.css'\n\nconst DialogItem = (props) => {\n  let pathToDialog = `/dialogs/${props.id}`\n  return (\n    <div className={classes.dialog}>\n      <div>\n        <img src=\"https://i.imgur.com/Ss75Vfa.jpg\" alt=\"dialogItem\"/>\n      </div>\n      <div>\n        <NavLink to={pathToDialog} activeClassName={classes.active}>{props.name}</NavLink>\n      </div>\n    </div>\n  )\n}\n\nexport default DialogItem","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogBlock\":\"Dialogs_dialogBlock__3EkfI\",\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"messageItems\":\"Dialogs_messageItems__1r8sx\"};","import React from 'react'\nimport classes from './Message.module.css'\n\n\nconst Message = (props) => { \n  return (\n    <div className={classes.message}>\n      <div>\n        <img src=\"https://i.imgur.com/sFRuG9D.jpg\" alt=\"messageImage\"/>\n      </div>\n      <div className={classes.messageText}>\n        {props.message}\n      </div>\n    </div>\n  )\n}\n\nexport default Message","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"active\":\"DialogItem_active__2qnc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1MOXo\",\"messageText\":\"Message_messageText__1G9P6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendMessages\":\"MessageForm_sendMessages__1ONjS\"};","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { Textarea } from '../../common/ValidatedFields/validatedFields'\nimport { createMaxLengthValivator, required } from '../../utils/validators'\nimport classes from './MessageForm.module.css'\n\nconst maxLength70 = createMaxLengthValivator(70)\n\nconst MessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} className={classes.sendMessages}>\n      <div>\n        <Field \n        type='text' \n        component={Textarea} \n        name='messageText'\n        validate={[required, maxLength70]} \n        placeholder='Enter your message'/>\n      </div>\n      <div>\n        <button>Send message</button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'message'\n})(MessageForm)","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Field, reduxForm } from 'redux-form'\nimport DialogItem from './DialogItem/DialogItem'\nimport classes from './Dialogs.module.css'\nimport Message from './Message/Message'\nimport MessageForm from './MessageForm/MessageForm'\n\n\n\nconst Dialogs = (props) => {\n\n  const dialogsElements = props.dialogsData.map((dialog, index) => {\n    return (\n      <DialogItem name={dialog.name} id={dialog.id} key={index}/>\n    )\n  })\n\n  const messagesElements = props.messagesData.map((msg, index) => {\n    return(\n      <Message message={msg.message} key={index}/>\n    )\n  })\n\n  const onSendMessage = (formData) => {\n    props.onSendMessage(formData.messageText)\n  }\n\n  return (\n    <div className={classes.dialogBlock}>\n      <div className={classes.dialogs}>\n        <div className={classes.dialogsItems}>\n          { dialogsElements }\n        </div>\n        <div className={classes.messageItems}> \n          { messagesElements }\n        </div>\n        <MessageForm onSubmit={(formData) => onSendMessage(formData)}/>\n      </div>\n    </div>\n  )\n}\n\n\nexport default Dialogs","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction mapStateToProps(state) {\n  return {\n    isAuth: state.auth.isAuth\n  }\n}\n\nconst withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render () {\n      if (!this.props.isAuth) {\n        return <Redirect to='/login' />\n      }\n      return (\n        <Component {...this.props} />\n      )\n    }\n  }\n  return connect(mapStateToProps)(RedirectComponent)\n};\n\nexport default withAuthRedirect\n","import React from 'react'\nimport { sendMessage, sendMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogs-reducer'\nimport StoreContext from '../../StoreContext'\nimport DialogItem from './DialogItem/DialogItem'\nimport Dialogs from './Dialogs'\nimport classes from './Dialogs.module.css'\nimport Message from './Message/Message'\nimport {connect} from 'react-redux'\nimport withAuthRedirect from '../hoc/withAuthRedirect'\nimport { compose } from 'redux'\n\n\n\n// const DialogsContainer = (props) => {\n\n//   return (\n//     <StoreContext.Consumer>\n//       {\n//         (store) => {\n//           let state = store.getState().dialogsPage\n\n//           const onSendMessage = () => {\n//             store.dispatch(sendMessageActionCreator())\n//           }\n        \n//           const onMessageChange = (text) => {\n//             store.dispatch(updateNewMessageTextActionCreator(text))\n//           }\n\n//           return (\n//             <Dialogs \n//               onSendMessage={onSendMessage}\n//               onMessageChange={(text) => onMessageChange(text)} \n//               state={state}\n//             />\n//           )\n//         }\n//       }\n      \n//     </StoreContext.Consumer>\n//   )\n// }\n\nfunction mapStateToProps(state) {\n  return {\n    dialogsData: state.dialogsPage.dialogsData,\n    messagesData: state.dialogsPage.messagesData,\n    // newMessageText: state.message.messageText\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSendMessage: (message) => {\n      dispatch(sendMessage(message))\n    },\n  }\n}\n\n\n\nexport default compose(\n                connect(mapStateToProps, mapDispatchToProps),\n                withAuthRedirect\n              )(Dialogs)"],"sourceRoot":""}